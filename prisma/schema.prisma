generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Waitlist {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  userType   String
  signupDate DateTime @default(now())
}

model User {
  id            String         @id @default(cuid())
  email         String         @unique
  name          String?
  userType      UserType
  location      String?
  bio           String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  catProfiles   CatProfile[]
  hostedVisits  VisitRequest[] @relation("Owner")
  visitRequests VisitRequest[] @relation("Visitor")
}

model CatProfile {
  id          String         @id @default(cuid())
  name        String
  age         Int?
  description String?
  available   Boolean        @default(true)
  ownerId     String
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  owner       User           @relation(fields: [ownerId], references: [id])
  visits      VisitRequest[]
}

model VisitRequest {
  id        String      @id @default(cuid())
  catId     String
  visitorId String
  ownerId   String
  status    VisitStatus
  startTime DateTime
  endTime   DateTime
  message   String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  cat       CatProfile  @relation(fields: [catId], references: [id])
  owner     User        @relation("Owner", fields: [ownerId], references: [id])
  visitor   User        @relation("Visitor", fields: [visitorId], references: [id])
}

enum UserType {
  CAT_OWNER
  CAT_LOVER
}

enum VisitStatus {
  PENDING
  APPROVED
  REJECTED
  COMPLETED
  CANCELLED
}
